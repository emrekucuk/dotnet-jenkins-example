pipeline {
    agent any

    stages {
        stage('JenkinsExample') {
            stages {
                stage('JenkinsExample - CI') {
                    steps {
                        sh("docker build -t registry.emrekucuk.com.tr/dotnet-jenkins-example:${env.BUILD_ID} -f DevOps/Docker/Dockerfile .")
                        sh("docker push registry.emrekucuk.com.tr/dotnet-jenkins-example:${env.BUILD_ID}")
                    }
                }
                 stage('JenkinsExample - CD') {
                    steps {
                        sh("./DevOps/Scripts/stop.sh || true ")
                        sh("./DevOps/Scripts/start.sh ")
                    }
                }
                stage('Send Notification Mail') {
                    steps {
                        mail(body: "Backend: production module(s) successfully builded, published and deployed to kubernetes.", 
                        from: 'emre.kucuk@crosstech.com.tr', subject: 'Jenkins: Dotnet Jenkins Example Backend Project Pipeline Completed', to: 'emrekucuk74@hotmail.com')
                    }
                }
            }
        }

       	// stage('Clear Produced Dangling Containers/Layers') {
        //     steps {
				// sh("docker images | grep '<none>' | awk '{print \$3}' | xargs -I {} docker rmi -f {} || true")
				// sh("docker images | grep 'registry.toprak.tkholding.com' | awk '{print \$3}' | xargs -I {} docker rmi -f {} || true")
        //     }
        // }
    }
}